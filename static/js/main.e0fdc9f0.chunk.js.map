{"version":3,"sources":["components/Layout/Layout.js","components/StudentForms/Forms/SchoolList.js","util/constants/formSections.js","components/StudentForms/Forms/InfoForm.js","components/StudentForms/Forms/ConfirmationPage.js","components/StudentForms/FormNavigator.js","App.js","serviceWorker.js","index.js"],"names":["LayoutHeader","className","LayoutContent","props","children","LayoutFooter","Layout","this","Component","schoolList","School","isSelected","style","textDecoration","label","SchoolList","map","school","key","formSections","formTitles","NameContainer","Row","Col","md","htmlFor","type","id","AddressContainer","isShow","SecondaryAddressContainer","TooltipTrigger","OverlayTrigger","trigger","placement","overlay","Popover","Title","as","Content","Badge","pill","variant","ContactContainer","isGuardianPage","studentFields","guardianFields","PasswordContainer","StudentForm","title","isEmergencyContact","FIELD_NAMES","firstName","lastName","address","studentId","email","phoneNumber","InfoCard","cardData","Name","CardTitle","Object","keys","property","idx","ConfirmationPage","finalData","mappedData","data","FormStepper","Stepper","activeStep","alternativeLabel","section","Step","StepLabel","StepsNavigator","navigatorClickHandler","currentStep","Button","color","onClick","e","FormSwitcher","FormNavigator","state","isNext","newActiveStep","setState","TransitionGroup","CSSTransition","in","appear","timeout","exit","classNames","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e0fdc9f0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./style.scss\";\r\n\r\nconst LayoutHeader = () => {\r\n  return (\r\n    <div className=\"header\">\r\n      <h1 className=\"title\">Registration Form</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst LayoutContent = props => {\r\n  return <div className=\"content\">\r\n    {props.children}\r\n  </div>;\r\n};\r\n\r\nconst LayoutFooter = () => {\r\n  return <div className=\"footer\">By: Harvey Charles Pioquinto</div>;\r\n};\r\n\r\nexport default class Layout extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"layout\">\r\n        <LayoutHeader></LayoutHeader>\r\n        <LayoutContent>{this.props.children}</LayoutContent>\r\n        <LayoutFooter></LayoutFooter>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nconst schoolList = [\r\n  \"Bank Street College of Education (Graduate School)\",\r\n  \"Bard College, Annandale-on-Hudson\",\r\n  \"Barnard College\",\r\n  \"Brooklyn Law School\",\r\n  \"Cazenovia College\",\r\n  \"Clarkson University\"\r\n];\r\n\r\nconst School = props => {\r\n  const styles = {\r\n    textDecoration: \"none\"\r\n  };\r\n\r\n  return (\r\n    <li>\r\n      <button className={`school-label ${props.isSelected ? 'selected' : ''}`} style={styles}>\r\n        {props.label}\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default class SchoolList extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"school-list\">\r\n        <h1 className=\"school-title\">\r\n          Select school from List\r\n        </h1>\r\n        <ul className=\"schools\">\r\n          {schoolList.map((school, key) => (\r\n            <School key={key} label={school}></School>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export const formSections = [\r\n  \"School\",\r\n  \"Student Info\",\r\n  \"Parent\",\r\n  \"Emergency\",\r\n  \"Confirm\",\r\n];\r\n\r\nexport const formTitles = {\r\n  [formSections[1]]: \"Student Information\",\r\n  [formSections[2]]: \"Parent/Guardian Information\",\r\n  [formSections[3]]: \"Emergency Contact\",\r\n}","import React, { Component, Fragment } from \"react\";\r\nimport { Row, Col, Badge, OverlayTrigger, Popover } from \"react-bootstrap\";\r\nimport { formSections } from \"util/constants/formSections\";\r\n\r\nconst NameContainer = () => {\r\n  return (\r\n    <Row className=\"inputs-container\">\r\n      <Col md=\"6\" className=\"field\">\r\n        <label htmlFor=\"firstname\">First Name</label>\r\n        <input type=\"text\" id=\"firstname\" />\r\n      </Col>\r\n      <Col md=\"6\" className=\"field\">\r\n        <label htmlFor=\"lastname\">Last Name</label>\r\n        <input type=\"text\" id=\"lastname\" />\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nconst AddressContainer = props => {\r\n  const { isShow } = props;\r\n  if (!isShow) return <Row></Row>;\r\n  return (\r\n    <Row className=\"inputs-container\">\r\n      <Col md=\"12\" className=\"field\">\r\n        <label htmlFor=\"address\">Address</label>\r\n        <input type=\"text\" id=\"address\" />\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nconst SecondaryAddressContainer = props => {\r\n  const { isShow } = props;\r\n  if (!isShow) return <Row></Row>;\r\n  return (\r\n    <Row className=\"inputs-container\">\r\n      <Col md=\"4\" className=\"field\">\r\n        <label htmlFor=\"city\">City</label>\r\n        <input type=\"text\" id=\"city\" />\r\n      </Col>\r\n      <Col md=\"4\" className=\"field\">\r\n        <label htmlFor=\"state\">State</label>\r\n        <select id=\"state\">\r\n          <option>VA</option>\r\n          <option>AV</option>\r\n          <option>SD</option>\r\n        </select>\r\n      </Col>\r\n      <Col md=\"4\" className=\"field\">\r\n        <label htmlFor=\"zip\">Zip Code</label>\r\n        <input type=\"text\" id=\"zip\" />\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nconst TooltipTrigger = () => {\r\n  return (\r\n    <OverlayTrigger\r\n      trigger=\"click\"\r\n      placement=\"top\"\r\n      overlay={\r\n        <Popover id={`popover-positioned-top`}>\r\n          <Popover.Title as=\"h3\">{`Popover top`}</Popover.Title>\r\n          <Popover.Content>\r\n            <strong>Holy guacamole!</strong> Check this info.\r\n          </Popover.Content>\r\n        </Popover>\r\n      }\r\n    >\r\n      <Badge pill variant=\"info\">\r\n        ?\r\n      </Badge>\r\n    </OverlayTrigger>\r\n  );\r\n};\r\n\r\nconst ContactContainer = props => {\r\n  const { isGuardianPage } = props;\r\n  const studentFields = (\r\n    <Fragment>\r\n      <Col md=\"6\" className=\"field\">\r\n        <span className=\"with-tooltip\">\r\n          <label htmlFor=\"studentId\">Student ID</label>\r\n          <TooltipTrigger />\r\n        </span>\r\n        <input type=\"text\" id=\"studentId\" />\r\n      </Col>\r\n      <Col md=\"6\" className=\"field\">\r\n        <span className=\"with-tooltip\">\r\n          <label htmlFor=\"email\">Email</label>\r\n          <TooltipTrigger />\r\n        </span>\r\n        <input type=\"email\" id=\"email\" />\r\n      </Col>\r\n    </Fragment>\r\n  );\r\n\r\n  const guardianFields = (\r\n    <Fragment>\r\n      <Col md=\"6\" className=\"field\">\r\n        <span className=\"with-tooltip\">\r\n          <label htmlFor=\"email\">Email</label>\r\n          <TooltipTrigger />\r\n        </span>\r\n        <input type=\"email\" id=\"email\" />\r\n      </Col>\r\n      <Col md=\"6\" className=\"field\">\r\n        <label htmlFor=\"phoneNumber\">Phone Number</label>\r\n        <input type=\"phoneNumber\" id=\"phoneNumber\" />\r\n      </Col>\r\n    </Fragment>\r\n  );\r\n\r\n  return (\r\n    <Row className=\"inputs-container\">\r\n      {isGuardianPage ? guardianFields : studentFields}\r\n    </Row>\r\n  );\r\n};\r\n\r\nconst PasswordContainer = props => {\r\n  const { isShow } = props;\r\n  if (!isShow) return <Row></Row>;\r\n  return (\r\n    <Row className=\"inputs-container\">\r\n      <Col md=\"6\" className=\"field\">\r\n        <label htmlFor=\"pword\">Password</label>\r\n        <input type=\"password\" id=\"pword\" />\r\n      </Col>\r\n      <Col md=\"6\" className=\"field\">\r\n        <label htmlFor=\"confirmPword\">Confirm Password</label>\r\n        <input type=\"password\" id=\"confirmPword\" />\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default class StudentForm extends Component {\r\n  render() {\r\n    const { title, type } = this.props;\r\n    const isEmergencyContact = type !== formSections[3];\r\n    const isGuardianPage = type !== formSections[1];\r\n    return (\r\n      <div className=\"form-container\">\r\n        <Row className=\"school-name\">\r\n          <h2>\r\n            {type === formSections[1]\r\n              ? \"Bank Street College of Education (Graduate School)\"\r\n              : \"\"}\r\n          </h2>\r\n        </Row>\r\n        <Row className=\"title\">\r\n          <h2>{title}</h2>\r\n        </Row>\r\n        <NameContainer />\r\n        <AddressContainer isShow={isEmergencyContact} />\r\n        <SecondaryAddressContainer isShow={isEmergencyContact} />\r\n        <ContactContainer isGuardianPage={isGuardianPage} />\r\n        <PasswordContainer isShow={isEmergencyContact} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\n\r\nconst dataMapper = data => {\r\n  const dummyStudent = {\r\n    title: 'Student Information',\r\n    firstName: \"John\",\r\n    lastName: \"Doe\",\r\n    school: \"Rusty Lakes College\",\r\n    address: \"123 Main St. New York, Ny 5555\",\r\n    studentId: \"pd48\",\r\n    email: \"sample@zero.com\"\r\n  };\r\n  const dummyParent = {\r\n    title: 'Parent Information',\r\n    firstName: \"Jane\",\r\n    lastName: \"Doe\",\r\n    address: \"123 Main St. New York, Ny 5555\",\r\n    phoneNumber: \"+948201992\",\r\n    email: \"parent@zero.com\",\r\n  };\r\n  const dummyEmergency = {\r\n    title: 'Emergency Contact',\r\n    firstName: \"James\",\r\n    lastName: \"Doe\",\r\n    address: \"123 Main St. New York, Ny 5555\",\r\n    phoneNumber: \"+94s8201992\",\r\n    email: \"parent@zero.com\",\r\n  };\r\n\r\n  return data || [dummyStudent, dummyParent, dummyEmergency];\r\n};\r\n\r\nconst FIELD_NAMES = {\r\n  firstName: \"First Name\",\r\n  lastName: \"Last Name\",\r\n  school: \"School\",\r\n  address: \"Address\",\r\n  studentId: \"Student ID\",\r\n  email: \"Email\",\r\n  phoneNumber: \"Phone Number\"\r\n};\r\n\r\nconst InfoCard = props => {\r\n  const { cardData } = props;\r\n  const { title, firstName, lastName } = cardData;\r\n  delete cardData.firstName;\r\n  delete cardData.lastName;\r\n  delete cardData.title;\r\n\r\n  const Name = (\r\n    <div className=\"name-field\">\r\n      <p>First Name: {firstName}</p>\r\n      <p>Last Name: {lastName}</p>\r\n    </div>\r\n  );\r\n\r\n  const CardTitle = (\r\n    <h2 className=\"card-title\">\r\n      {title}\r\n    </h2>\r\n  )\r\n\r\n  return (\r\n    <Fragment>\r\n      {CardTitle}\r\n      {Name}\r\n      {Object.keys(cardData).map((property, idx) => (\r\n        <p key={idx}>{`${FIELD_NAMES[property]}: ${cardData[property]}`}</p>\r\n      ))}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default class ConfirmationPage extends Component {\r\n  render() {\r\n    const { finalData } = this.props;\r\n    const mappedData = dataMapper(finalData);\r\n    return (\r\n      <Row className=\"confirmation-page\">\r\n        {mappedData.map((data, key) => (\r\n          <Col md=\"4\" className=\"card\" key={key}>\r\n            <InfoCard cardData={data} ></InfoCard>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Stepper, Step, StepLabel, Button } from \"@material-ui/core\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport SchoolList from \"./Forms/SchoolList\";\r\nimport InfoForm from \"./Forms/InfoForm\";\r\nimport ConfirmationPage from \"./Forms/ConfirmationPage\";\r\nimport { formSections, formTitles } from \"util/constants/formSections\";\r\nimport \"./style.scss\";\r\nimport \"./Forms/styles.scss\";\r\n\r\nconst FormStepper = props => {\r\n  return (\r\n    <Fragment>\r\n      <Stepper activeStep={props.activeStep} alternativeLabel>\r\n        {formSections.map(section => (\r\n          <Step key={section}>\r\n            <StepLabel>{section}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst StepsNavigator = props => {\r\n  const { navigatorClickHandler, currentStep } = props;\r\n  return (\r\n    <Fragment>\r\n      <Button\r\n        className=\"previous\"\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        onClick={e => navigatorClickHandler(false)}\r\n      >\r\n        Previous\r\n      </Button>\r\n      <Button\r\n        className=\"next\"\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={e => navigatorClickHandler(true)}\r\n      >\r\n        { currentStep === 4 ? 'Submit' : 'Next'}\r\n      </Button>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst FormSwitcher = props => {\r\n  const { currentStep } = props;\r\n  const PAGES = {\r\n    SCHOOL_LIST: 0,\r\n    CONFIRMATION_PAGE: 4\r\n  };\r\n\r\n  switch (currentStep) {\r\n    case PAGES.SCHOOL_LIST:\r\n      return <SchoolList></SchoolList>;\r\n    case PAGES.CONFIRMATION_PAGE:\r\n      return <ConfirmationPage></ConfirmationPage>;\r\n    default:\r\n      return (\r\n        <InfoForm\r\n          title={formTitles[formSections[currentStep]]}\r\n          type={formSections[currentStep]}\r\n        />\r\n      );\r\n  }\r\n};\r\n\r\nexport default class FormNavigator extends Component {\r\n  state = {\r\n    activeStep: 0\r\n  };\r\n\r\n  navigatorClickHandler = isNext => {\r\n    const { activeStep } = this.state;\r\n    const newActiveStep = isNext ? activeStep + 1 : activeStep - 1;\r\n    if (newActiveStep === -1 || newActiveStep === 5) return;\r\n    this.setState({\r\n      activeStep: newActiveStep\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { activeStep } = this.state;\r\n    return (\r\n      <div className=\"form-navigator\">\r\n        <div className=\"stepper\">\r\n          <FormStepper activeStep={activeStep} />\r\n        </div>\r\n        <div className=\"form\">\r\n          <TransitionGroup>\r\n            <CSSTransition\r\n              in={true}\r\n              appear={true}\r\n              timeout={300}\r\n              key={activeStep}\r\n              exit={false}\r\n              classNames=\"fade\"\r\n            >\r\n              <FormSwitcher currentStep={activeStep}></FormSwitcher>\r\n            </CSSTransition>\r\n          </TransitionGroup>\r\n        </div>\r\n        <div className=\"steps-navigator\">\r\n          <StepsNavigator\r\n            currentStep={activeStep}\r\n            navigatorClickHandler={this.navigatorClickHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Layout from \"components/Layout/Layout\";\r\nimport FormNavigator from \"components/StudentForms/FormNavigator\";\r\nimport \"./App.css\";\r\n\r\nexport default class App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n          <Layout>\r\n            <FormNavigator />\r\n          </Layout>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './reset.css';\r\nimport './animations.scss';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}